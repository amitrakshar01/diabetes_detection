# -*- coding: utf-8 -*-
"""Diabetes detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MRuNsJfy69O5sbyUchwOOJKNdqGmpSd6
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn import svm
from sklearn.linear_model import LinearRegression

data = pd.read_csv('/content/diabetes.csv')
data.head()

data.shape

data['Outcome'].value_counts()

data.groupby('Outcome').mean()

X = data.drop(columns='Outcome', axis=1)
Y = data['Outcome']

print(X)

print(Y)

# Data Standardization
scaler = StandardScaler()
standardized_data = scaler.fit_transform(X)
print(standardized_data)

X = standardized_data
Y = data['Outcome']

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,stratify=Y,random_state=1)

classifier = svm.SVC(kernel='linear')

classifier.fit(X_train,Y_train)

train_prediction = classifier.predict(X_train) #Training data prediction
training_data_accuracy = accuracy_score(train_prediction,Y_train)
print(training_data_accuracy)

test_prediction = classifier.predict(X_test) #Training data prediction
test_data_accuracy = accuracy_score(test_prediction,Y_test)
print(test_data_accuracy)

# Prediction
input_data = (3,126,88,41,235,39.3,0.704,27)
dat = np.asarray(input_data)
rdat = dat.reshape(1,-1)
std_data = scaler.fit_transform(rdat)
p = classifier.predict(std_data)
print(p)